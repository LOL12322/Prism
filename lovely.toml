[manifest]
version = "1.0.0"
dump_lua = true
priority = 5

# Burnt card extra card draw
[[patches]]
[patches.pattern]
target = '''functions/state_events.lua'''
pattern = "for i=1, hand_space do*"
position = "before"
payload = '''
hand_space = hand_space + G.GAME.prism_extra_draw
G.GAME.prism_extra_draw = 0
'''
match_indent = true

#bonus packs
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''G.GAME.pack_choices = self.config.center.config.choose or 1'''
position = 'after'
payload = '''
if G.GAME.used_vouchers.v_prism_bonus_packs then G.GAME.pack_choices = G.GAME.pack_choices + 1 end
'''
match_indent = true

#perma mult
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "elseif _c.set == 'Enhanced' then"
position = "before"
payload = '''
    if specific_vars.bonus_mult then
	    localize{type = 'other', key = 'card_extra_mult', nodes = desc_nodes, vars = {specific_vars.bonus_mult}}
    end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "elseif _c.set == 'Booster' then"
position = "before"
payload = '''
    if specific_vars and specific_vars.bonus_mult then
	    localize{type = 'other', key = 'card_extra_mult', nodes = desc_nodes, vars = {specific_vars.bonus_mult}}
    end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "nominal_chips = self.base.nominal > 0 and self.base.nominal or nil,"
position = "after"
payload = '''
bonus_mult = (self.ability.perma_mult or 0) > 0 and (self.ability.perma_mult or 0) or nil,
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "perma_bonus = self.ability and self.ability.perma_bonus or 0,"
position = "after"
payload = '''
perma_mult = self.ability and self.ability.perma_mult or 0,
'''
match_indent = true

#green seal
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.deck:shuffle('nr'..G.GAME.round_resets.ante)"
position = "after"
payload = '''
local cards = {}
for i=1, #G.deck.cards - 1 do
    while i <= #G.deck.cards and G.deck.cards[i].seal == "prism_green" do
        table.insert(cards, G.deck.cards[i])
        table.remove(G.deck.cards,i)
    end
end
for _, card in pairs(cards) do
    local pos = (pseudorandom('green') < 0.5 and #G.deck.cards) or pseudorandom('green_pos', 1, #G.deck.cards + 1)
    table.insert(G.deck.cards,pos,card)
end
'''
match_indent = true

#ban djinn from jokerless challenge
[[patches]]
[patches.pattern]
target = "challenges.lua"
pattern = "{id = 'c_soul'},"
position = "after"
payload = '''
{id = 'c_prism_spectral_djinn'},
'''
match_indent = true

#ban enhancers from fragile challenge
[[patches]]
[patches.pattern]
target = "challenges.lua"
pattern = "{id = 'c_lovers'},"
position = "after"
payload = '''
{id = 'c_prism_myth_dwarf'},
{id = 'c_prism_myth_dragon'},
{id = 'c_prism_myth_twin'},
{id = 'c_prism_myth_siren'},
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "challenges.lua"
pattern = "{id = 'j_marble'},"
position = "after"
payload = '''
{id = 'j_prism_medusa'},
'''
match_indent = true

